1.描述你对虚函数的认识：

C++中的虚函数 virtual 的作用主要是实现了多态的机制。关于多态，简而言之就是用父类型别的指针指向其子类的实例(对象)，然后通过父类的指针调用实际子类的成员函数。这种技术可以让父类的指针有“多种形态”，这是一种泛型技术。

2.面向对象：
封装 继承 多态

对象：把数据及对数据的操作方法放在一起，作为一个相互依存的整体。

封装: 对同类对象抽象出其共性，形成类。其中数据和函数都是类的成员,对外公开接口,而我们只要通过外部接口，以特定的访问权限来使用类的成员。对象与对象之间通过消息进行通信。

继承：继承就是子类继承父类的特征和行为，使得子类对象（实例）具有父类的实例域和方法，或子类从父类继承方法，使得子类具有父类相同的行为

多态：多态指同一个实体同时具有多种形式，允许将子类类型的指针赋值给父类类型的指针。（多态其实是在继承的基础上的）

优点：易维护、易复用、易扩展。

由于面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，使系统更加灵活更加易于维护 

缺点：性能比面向过程差(面向过程关心处理过程,流程等问题)


3.纯虚函数：

virtual void Show()=0;
在普通的虚函数后面加上"=0"这样就声明了一个pure virtual function.

使用方法：
（1）当想在基类中抽象出一个方法，且该基类只做能被继承，而不能被实例化；
（2）这个方法必须在派生类(derived class)中被实现；
  如果满足以上两点，可以考虑将该方法申明为pure virtual function.

4.什么是抽象类：
带有纯虚函数的类称为抽象类，不可实例化，不能new

5.递归函数：

递归就是一个函数在它的函数体内调用它自身。执行递归函数将反复调用其自身，每调用一次就进入新的一层。递归函数必须有结束条件

优点: 结构清晰, 可读性强, 而且容易用数学归纳法来证明算法的正确性, 因此它为设计算法、 调试程序带来很大方便。
缺点: 递归算法的运行效率较低, 无论是耗费的计算时间还是占用的存储空间都比非递归算法要多。

6.js的基本数据类型有哪些：

js中有5种数据类型：Undefined、Null、Boolean、Number和String。

object（Data、function、Array）
Undefined类型只有一个值即undefined，使用var声明变量，但是未对初始化的，这个变量就是Undefined类型的
Null类型也只有一个值：null.null表示一个空对象的指针。
Number类型：整数和浮点数。
NaN：Not
 a Number。用于引用特殊的非数字值。

7.变量提升：

先使用后定义 var

8.暂时性死区：

代码块内，使用let和const命令声明变量之前，该变量都是不可用的，语法上被称为暂时性死区。

9.闭包了解：

闭包就是能够读取其他函数内部变量的函数。只有函数内部的子函数才能读取局部变量，闭包是函数内部和函数外部连接起来的桥梁。
闭包可以保护函数内的变量安全。使得回收机制不会收回函数占用资源，在内存中维持一个变量。但滥用闭包会造成内存泄露，因为闭包中引用到的包裹函数中定义的变量都永远不会被释放，所以应该在必要的时候，及时释放闭包函数。

10.creator字体描边：

官方自带了一个LabelOutline脚本，只要在Label的节点上，挂上LabelOutline脚本，设置下文字和描边的颜色，描边的宽度

11.析构函数：

释放空间(内存)时调用

12.虚析构函数的作用：

为了避免内存泄漏，而且是当子类中会有指针成员变量时才会使用到。即虚析构函数使得在删除指向子类对象的基类指针时，可以调用子类的析构函数来实现释放子类中堆内存的目的，从而防止内存泄漏。
