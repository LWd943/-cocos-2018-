一、tcp/ip协议:三次握手，短连接/长连接
在TCP/IP协议中,TCP协议提供可靠的连接服务,采用三次握手建立一个连接.
第一次握手：建立连接时,客户端发送syn包(syn=j)到服务器,并进入SYN_SEND状态,等待服务器确认； 
SYN：同步序列编号(Synchronize Sequence Numbers)
第二次握手：服务器收到syn包,必须确认客户的SYN（ack=j+1）,同时自己也发送一个SYN包（syn=k）,即SYN+ACK包,此时服务器进入SYN_RECV状态； 
第三次握手：客户端收到服务器的SYN＋ACK包,向服务器发送确认包ACK(ack=k+1),此包发送完毕,客户端和服务器进入ESTABLISHED状态,完成三次握手. 

短连接:
连接->传输数据->关闭连接
长连接:
连接->传输数据->保持连接 -> 传输数据-> 。。。 ->关闭连接

附:TCP4次挥手
（1）第一次挥手：Client发送一个FIN，用来关闭Client到Server的数据传送，Client进入FIN_WAIT_1状态。
（2）第二次挥手：Server收到FIN后，发送一个ACK给Client，确认序号为收到序号+1（与SYN相同，一个FIN占用一个序号），Server进入CLOSE_WAIT状态。
（3）第三次挥手：Server发送一个FIN，用来关闭Server到Client的数据传送，Server进入LAST_ACK状态。
（4）第四次挥手：Client收到FIN后，Client进入TIME_WAIT状态，接着发送一个ACK给Server，确认序号为收到序号+1，Server进入CLOSED状态，完成四次挥手。


http/https 协议get和post区别
（1）使用Get请求时,参数在URL中显示,而使用Post请求,则不会显示出来； 
（2）Post传输的数据量大，可以达到2M，而Get方法由于受到URL长度的限制,只能传递大约1024字节. 
（3）Get请求请求需注意缓存问题,Post请求不需担心这个问题； 
（4）Post请求必须设置Content-Type值为application/x-form-www-urlencoded； 
（5）发送请求时,因为Get请求的参数都在url里,所以send函数发送的参数为null,而Post请求在使用send方法时,却需赋予其参数； 
（6）GET方式请求的数据会被浏览器缓存起来，因此其他人就可以从浏览器的历史记录中读取到这些数据，例如账号和密码等。在某种情况下，GET方式会带来严重的安全问题。而POST方式相对来说就可以避免这些问题。

TCP与UDP的区别
TCP (Transmission Control Protocol)和UDP(User Datagram Protocol)协议属于传输层协议，它们之间的区别包括：


TCP是面向连接的，UDP是无连接的；


TCP是可靠的，UDP是不可靠的；


TCP只支持点对点通信，UDP支持一对一、一对多、多对一、多对多的通信模式；


TCP是面向字节流的，UDP是面向报文的；


TCP有拥塞控制机制;UDP没有拥塞控制，适合媒体通信；


TCP首部开销(20个字节)比UDP的首部开销(8个字节)要大；

OSI七层模型:
物理层 数据链路层 网络层  运输层  会话层  表示层  应用层


TCP怎么保证可靠性

1.校验和，发送方和接受方用同样的算法计算校验和，对比如果不一致则一定有误，一致则可能有误

2.应答机制：TCp传输对每个字节的数据编号，当接收方收到数据后，会发送ACK报文，这个报文中带有的序列号告诉发送方接受了那些数据，下一次从哪里发

3.超时重传

4.连接管理，三次握手四次挥手

5.流量控制，接受方返回ACK时，会把自己剩余缓冲区的大小填补进窗口字段中，发送方根据ACK报文里窗口值的大小改变自己的发送速度，如果为0，停止发送，并定期发送窗口探测数据段，得到接受方的窗口大小

6.拥塞控制，慢启动机制，刚开始拥塞窗口为1，每次收到ACK应答拥塞窗口翻倍，发送数据前首先把拥塞 窗口与接受端反馈的窗口大小对比，选择较小的作为实际发送的窗口；设置一个拥塞窗口的阈值，当大小超过阈值时，由指数增长变为线性增长；在一开始，这个阈值时窗口的最大值，一旦发生超时重传，慢启动的阈值设置为原来的一半，同时拥塞窗口置为1；

7.面向字节流，TCP不插入任何记录标识符也不做任何解释





